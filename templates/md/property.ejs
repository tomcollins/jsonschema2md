<% /**
 * Copyright 2017 Adobe Systems Incorporated. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 */ %>

 ---
 
## <%=name %>

<% if (schema.description) { %>
<%= schema.description.replace(/\n/g, '\n\n') %>
<% } %>

### Properties

| Name | Value |
| --- | --- |
<% if (schema.$ref!==undefined) { %>
| Type | [<%=schema.$linkVal %>](<%=schema.$linkPath %>) |
<% } else { %>
| Type | <%=schema.simpletype %><% if (schema.simpletype.match(/\[\]\[\]/)||schema.simpletype==="`array[]`") { %> (nested array)<% } %> |
<% } -%>
| Required | <%= required === true ? "Yes" : "No" %> |
<% if (schema.type==='array') { %>
    <% if (schema.maxItems!==undefined) { %>}
        | MaxItems | <%=schema.maxItems %> |
    <% } -%>
    <% if (schema.minItems!==undefined) { %>}
        | MinItems | <%=schema.minItems %> |
    <% } -%>
<% } -%>
<% if (schema.default!==undefined) { %>
    | Default | <%- JSON.stringify(schema.default) %> |
<% } -%>
<% if (schema.const!==undefined) { %>
    | Constant | ```<%- JSON.stringify(schema.const) %>``` |
<% } -%>
<% if (schema.enum!==undefined) { %>
    | Enum | Yes |
<% } -%>
<% if (schema.type==="string") { %>
    <%- include("string-type",{schema:schema,_:_}) %>
<% } else if (schema.type==="number"||schema.type==="integer") { %>
    <%- include("number-type",{schema:schema,_:_}) %>
<% } else if (schema.type==="null") { %>
    <%- include("null-type",{schema:schema,_:_}) %>
<% } else if (schema.type==="boolean") { %>
    <%- include("boolean-type",{schema:schema,_:_}) %>
<% } else if (schema.type==="object") { %>
    <%- include("object-type",{schema:schema,_:_,nameSlug:nameSlug}) %>
<% } else if (schema.type==="array") { %>
    <%- include("array-type",{schema:schema,_:_,nested:false,ejs:ejs}) %>
<% } else if (schema.$ref!==undefined) { %>
    
<% } else if (schema.anyOf!==undefined || schema.allOf!==undefined || schema.oneOf!==undefined) { %>
    <%- include("join-type",{schema:schema,_:_,schemas:schema.anyOf || schema.allOf || schema.oneOf,ejs:ejs}) %>
<% } else if (schema.simpletype==="multiple") { %>
    <%- include("multiple-type",{schema:schema,_:_}) %>
<% } else { %>
    Unknown type `<%= schema.type %>`.


    ```json
    <%- JSON.stringify(schema, null, 2) %>
    ```

<% } %>



<% if (schema.enum!==undefined||schema["meta:enum"]!==undefined) { %>
### Enum values

| Value | Description |
|-------|-------------|
<%  _.forIn(schema["meta:enum"], (value, key, object) => { %>
| `<%= key %>` | <%= value %> |
<% }); %>

<% } %>


<% if (examples && examples.length == 1) { %>
### <%=name %> Example


```json
<%- examples[0] %>
```
<% } else if (examples && examples.length > 1) { %>
    ### <%=name %> Examples
    <%  _.forEach(examples, example => { %>

        ```json
        <%- example %>
        ```

    <% }); %>
<% } %>